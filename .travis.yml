language: python
python:
    - 2.6
    - 2.7
    - 3.3
env:
    - DJANGO=1.4 DB='sqlite://localhost/:memory:'
    - DJANGO=1.4 DB='mysql://root@127.0.0.1/djangocms_test'
    - DJANGO=1.4 DB='postgres://postgres@127.0.0.1/djangocms_test'
    - DJANGO=1.5 DB='sqlite://localhost/:memory:'
    - DJANGO=1.5 DB='mysql://root@127.0.0.1/djangocms_test'
    - DJANGO=1.5 DB='postgres://postgres@127.0.0.1/djangocms_test'
    - DJANGO=trunk DB='sqlite://localhost/:memory:'
    - DJANGO=trunk DB='mysql://root@127.0.0.1/djangocms_test'
    - DJANGO=trunk DB='postgres://postgres@127.0.0.1/djangocms_test'

before_script:
  - sh -c "if [ '$DB' = 'postgres://postgres@127.0.0.1/djangocms_test' ]; then psql -c 'DROP DATABASE IF EXISTS djangocms_test;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'postgres://postgres@127.0.0.1/djangocms_test' ]; then psql -c 'create database djangocms_test;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'mysql://root@127.0.0.1/djangocms_test' ]; then mysql -e 'create database IF NOT EXISTS djangocms_test CHARACTER SET utf8 COLLATE utf8_general_ci;'; fi"

install:
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    - pip install -q -r "test_requirements/django-$DJANGO.txt" --use-mirrors
    - if [ $DB == 'mysql://root@127.0.0.1/djangocms_test' ]; then pip install -q mysql-python --use-mirrors; fi
script:
    python runtests.py --db $DB
notifications:
    email:
        recipients:
          - digi@treepy.com
        on_success: never
        on_failure: always
    irc:
        - "irc.freenode.org#django-cms"
        - "irc.freenode.org#django-cms-sprint"


matrix:
  exclude:
    - python: 3.3
      env: DJANGO=1.4 DB='sqlite://localhost/:memory:'
    - python: 3.3
      env: DJANGO=1.4 DB='mysql://root@127.0.0.1/djangocms_test'
    - python: 3.3
      env: DJANGO=1.4 DB='postgres://postgres@127.0.0.1/djangocms_test'
    - python: 3.3
      env: DJANGO=1.5 DB='mysql://root@127.0.0.1/djangocms_test'

